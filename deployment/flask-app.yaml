---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: flask-app
  labels:
    app: flask-app
spec:
  selector:
    matchLabels:
      app: flask-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: astanil/flask:latest
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
          command: ["python"]
          args: ["-m", "flask", "run", "-h", "0.0.0.0"]
          env:
            - name: FLASK_APP
              value: api.py
            - name: FLASK_ENVIRONMENT
              value: development
            - name: MYSQL_USER
              value: user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql-db-name
            - name: MYSQL_HOSTNAME
              value: db
          ports:
            - containerPort: 5000
              name: flask
          startupProbe:
            httpGet:
              path: /api/heath-check/ok
              port: flask
            failureThreshold: 5
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /api/heath-check/ok
              port: flask
            failureThreshold: 5
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata: 
  name: flask-app
  namespace: flask-app
spec:
  selector: 
    app: flask-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: flask
      name: flask
  type: LoadBalancer
